# tmuxを256色表示できるようにする
set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'

# prefixキーをC-qに変更
set -g prefix C-q

# C-bのキーバインドを解除
unbind C-b

# ステータスバーをトップに配置する
set-option -g status-position top

# 左右のステータスバーの長さを決定する 
set-option -g status-left-length 90 
set-option -g status-right-length 90

# #P => ペイン番号
# 最左に表示
set-option -g status-left '#H:[#P]'

# Wi-Fi、バッテリー残量、現在時刻
# 最右に表示
set-option -g status-right '#(wifi) #(battery --tmux) [%Y-%m-%d(%a) %H:%M]'

# ステータスバーを1秒毎に描画し直す
set-option -g status-interval 1

# センタライズ（主にウィンドウ番号など）
set-option -g status-justify centre

# ステータスバーの色を設定する
set-option -g status-bg "colour238"

# status line の文字色を指定する。
set-option -g status-fg "colour255"

# vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# | でペインを縦分割する
# 加えて、カレントディレクトリを引き継ぐ
bind | split-window -h -c "#{pane_current_path}"

# - でペインを縦分割する
# 加えて、カレントディレクトリを引き継ぐ
bind - split-window -v -c "#{pane_current_path}"

# 番号基準値を変更
set-option -g base-index 1

# マウス操作を有効にする
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# コピーモードを設定する
# コピーモードでvimキーバインドを使う
#setw -g mode-keys vi

# 'v' で選択を始める
bind -T copy-mode-vi v send -X begin-selection

# 'V' で行選択
bind -T copy-mode-vi V send -X select-line

# 'C-v' で矩形選択
bind -T copy-mode-vi C-v send -X rectangle-toggle

# 'y' でヤンク
bind -T copy-mode-vi y send -X copy-selection

# 'Y' で行ヤンク
bind -T copy-mode-vi Y send -X copy-line

# 'C-p'でペースト
bind-key C-p paste-buffer

################### 説明 ####################
# prefix + ?	キーバインド一覧
# prefix + s	セッションの一覧表示
# prefix + c	新規ウィンドウ作成・追加
# prefix + w	ウィンドウの一覧
# prefix + &	ウインドウの破棄
# prefix + n	次のウインドウへ移動
# prefix + p	前のウインドウへ移動
# prefix + |	左右にペイン分割
# prefix + -	上下にペイン分割
# prefix + h	左のペインに移動
# prefix + j	下のペインに移動
# prefix + k	上のペインに移動
# prefix + l	右のペインに移動
# prefix + H	ペインを左にリサイズ
# prefix + J	ペインを下にリサイズ
# prefix + K	ペインを上にリサイズ
# prefix + L	ペインを右にリサイズ
# prefix + x	ペインの破棄
# prefix + スペース	ペインのレイアウト変更
# prefix + Ctrl + o	ペインの入れ替え
# prefix + {	ペインの入れ替え(上方向)
# prefix + }	ペインの入れ替え(下方向)
# prefix + [	コピーモードの開始(カーソルキーで移動)
# prefix + v	コピー開始位置決定(viモード)
# prefix + y	コピー終了位置決定(viモード)
# prefix + Crtl + p	コピー内容の貼り付け


# https://qiita.com/mikene_koko/items/2867a6fe2eb73db6562e
# 直前のウィンドウ                                         
bind t last-window

# デタッチ
bind d detach

# ウィンドウ選択画面
bind Space choose-window

# rbenv localを使えるようにする
set-environment -gu RBENV_VERSION 

# vim <=> tmux 間でクリップボード利用を可能にする
set-option -g default-command ""

# https://wiki.archlinux.jp/index.php/Tmux
# スクロールバックバッファを10000行に設定:
set -g history-limit 10000

# https://qiita.com/k_tada/items/4eb1cc4978021b84bed7
# Escをプロセスに渡す時間を 0 ms にする
set -g escape-time 0

# ウィンドウのインデックスのリナンバーを有効にする
set -g renumber-windows on

 # ウィンドウ作成時にカレントディレクトリを引き継ぐ
bind-key -T prefix c new-window -c "#{pane_current_path}"

# 前のウィンドウに移動
bind -n M-h previous-window
# 次のウィンドウに移動
bind -n M-l next-window
# 選択されているペインを右側にあるウィンドウへ移動する
bind -n S-Right join-pane -h -t :+
# 選択されているペインを左側にあるウィンドウへ移動する
bind -n S-Left join-pane -h -t :-
# 選択されているペインを現在のウィンドウから、新ウィンドウを作成しそこに移動する
 bind -n S-Down break-pane

# select_window
unbind-key s
bind-key s command-prompt "select-window -t '%%'"

# pane time
set display-panes-time 10000

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# for mac copy command
if-shell "uname | grep -q Darwin" \
  bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
# Update default binding of `Enter` to also use copy-pipe-and-cancel
unbind -T copy-mode-vi Enter
if-shell "uname | grep -q Darwin" \
  bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# for linux command
if-shell 'type xsel' \
  bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "xsel -ip && xsel -op | xsel -ib"
if-shell 'type xsel' \
  bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "xsel -ip && xsel -op | xsel -ib"
